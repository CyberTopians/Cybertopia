{
  "version": 3,
  "sources": ["../../../../../../node_modules/@angular/animations/fesm2022/animations.mjs", "../../../../../../node_modules/primeng/fesm2022/primeng-organizationchart.mjs"],
  "sourcesContent": ["/**\n * @license Angular v20.3.2\n * (c) 2010-2025 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport * as i0 from '@angular/core';\nimport { inject, Injectable, ANIMATION_MODULE_TYPE, ɵRuntimeError as _RuntimeError, DOCUMENT, Inject, ViewEncapsulation } from '@angular/core';\nimport { sequence } from './private_export.mjs';\nexport { AUTO_STYLE, AnimationMetadataType, NoopAnimationPlayer, animate, animateChild, animation, group, keyframes, query, stagger, state, style, transition, trigger, useAnimation, AnimationGroupPlayer as ɵAnimationGroupPlayer, ɵPRE_STYLE } from './private_export.mjs';\n\n/**\n * An injectable service that produces an animation sequence programmatically within an\n * Angular component or directive.\n * Provided by the `BrowserAnimationsModule` or `NoopAnimationsModule`.\n *\n * @usageNotes\n *\n * To use this service, add it to your component or directive as a dependency.\n * The service is instantiated along with your component.\n *\n * Apps do not typically need to create their own animation players, but if you\n * do need to, follow these steps:\n *\n * 1. Use the <code>[AnimationBuilder.build](api/animations/AnimationBuilder#build)()</code> method\n * to create a programmatic animation. The method returns an `AnimationFactory` instance.\n *\n * 2. Use the factory object to create an `AnimationPlayer` and attach it to a DOM element.\n *\n * 3. Use the player object to control the animation programmatically.\n *\n * For example:\n *\n * ```ts\n * // import the service from BrowserAnimationsModule\n * import {AnimationBuilder} from '@angular/animations';\n * // require the service as a dependency\n * class MyCmp {\n *   constructor(private _builder: AnimationBuilder) {}\n *\n *   makeAnimation(element: any) {\n *     // first define a reusable animation\n *     const myAnimation = this._builder.build([\n *       style({ width: 0 }),\n *       animate(1000, style({ width: '100px' }))\n *     ]);\n *\n *     // use the returned factory object to create a player\n *     const player = myAnimation.create(element);\n *\n *     player.play();\n *   }\n * }\n * ```\n *\n * @publicApi\n *\n * @deprecated 20.2 Use `animate.enter` or `animate.leave` instead. Intent to remove in v23\n */\nclass AnimationBuilder {\n  static ɵfac = function AnimationBuilder_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || AnimationBuilder)();\n  };\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: AnimationBuilder,\n    factory: () => (() => inject(BrowserAnimationBuilder))(),\n    providedIn: 'root'\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AnimationBuilder, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root',\n      useFactory: () => inject(BrowserAnimationBuilder)\n    }]\n  }], null, null);\n})();\n/**\n * A factory object returned from the\n * <code>[AnimationBuilder.build](api/animations/AnimationBuilder#build)()</code>\n * method.\n *\n * @publicApi\n *\n * @deprecated 20.2 Use `animate.enter` or `animate.leave` instead. Intent to remove in v23\n */\nclass AnimationFactory {}\nclass BrowserAnimationBuilder extends AnimationBuilder {\n  animationModuleType = inject(ANIMATION_MODULE_TYPE, {\n    optional: true\n  });\n  _nextAnimationId = 0;\n  _renderer;\n  constructor(rootRenderer, doc) {\n    super();\n    const typeData = {\n      id: '0',\n      encapsulation: ViewEncapsulation.None,\n      styles: [],\n      data: {\n        animation: []\n      }\n    };\n    this._renderer = rootRenderer.createRenderer(doc.body, typeData);\n    if (this.animationModuleType === null && !isAnimationRenderer(this._renderer)) {\n      // We only support AnimationRenderer & DynamicDelegationRenderer for this AnimationBuilder\n      throw new _RuntimeError(3600 /* RuntimeErrorCode.BROWSER_ANIMATION_BUILDER_INJECTED_WITHOUT_ANIMATIONS */, (typeof ngDevMode === 'undefined' || ngDevMode) && 'Angular detected that the `AnimationBuilder` was injected, but animation support was not enabled. ' + 'Please make sure that you enable animations in your application by calling `provideAnimations()` or `provideAnimationsAsync()` function.');\n    }\n  }\n  build(animation) {\n    const id = this._nextAnimationId;\n    this._nextAnimationId++;\n    const entry = Array.isArray(animation) ? sequence(animation) : animation;\n    issueAnimationCommand(this._renderer, null, id, 'register', [entry]);\n    return new BrowserAnimationFactory(id, this._renderer);\n  }\n  static ɵfac = function BrowserAnimationBuilder_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || BrowserAnimationBuilder)(i0.ɵɵinject(i0.RendererFactory2), i0.ɵɵinject(DOCUMENT));\n  };\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: BrowserAnimationBuilder,\n    factory: BrowserAnimationBuilder.ɵfac,\n    providedIn: 'root'\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BrowserAnimationBuilder, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], () => [{\n    type: i0.RendererFactory2\n  }, {\n    type: Document,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }], null);\n})();\nclass BrowserAnimationFactory extends AnimationFactory {\n  _id;\n  _renderer;\n  constructor(_id, _renderer) {\n    super();\n    this._id = _id;\n    this._renderer = _renderer;\n  }\n  create(element, options) {\n    return new RendererAnimationPlayer(this._id, element, options || {}, this._renderer);\n  }\n}\nclass RendererAnimationPlayer {\n  id;\n  element;\n  _renderer;\n  parentPlayer = null;\n  _started = false;\n  constructor(id, element, options, _renderer) {\n    this.id = id;\n    this.element = element;\n    this._renderer = _renderer;\n    this._command('create', options);\n  }\n  _listen(eventName, callback) {\n    return this._renderer.listen(this.element, `@@${this.id}:${eventName}`, callback);\n  }\n  _command(command, ...args) {\n    issueAnimationCommand(this._renderer, this.element, this.id, command, args);\n  }\n  onDone(fn) {\n    this._listen('done', fn);\n  }\n  onStart(fn) {\n    this._listen('start', fn);\n  }\n  onDestroy(fn) {\n    this._listen('destroy', fn);\n  }\n  init() {\n    this._command('init');\n  }\n  hasStarted() {\n    return this._started;\n  }\n  play() {\n    this._command('play');\n    this._started = true;\n  }\n  pause() {\n    this._command('pause');\n  }\n  restart() {\n    this._command('restart');\n  }\n  finish() {\n    this._command('finish');\n  }\n  destroy() {\n    this._command('destroy');\n  }\n  reset() {\n    this._command('reset');\n    this._started = false;\n  }\n  setPosition(p) {\n    this._command('setPosition', p);\n  }\n  getPosition() {\n    return unwrapAnimationRenderer(this._renderer)?.engine?.players[this.id]?.getPosition() ?? 0;\n  }\n  totalTime = 0;\n}\nfunction issueAnimationCommand(renderer, element, id, command, args) {\n  renderer.setProperty(element, `@@${id}:${command}`, args);\n}\n/**\n * The following 2 methods cannot reference their correct types (AnimationRenderer &\n * DynamicDelegationRenderer) since this would introduce a import cycle.\n */\nfunction unwrapAnimationRenderer(renderer) {\n  const type = renderer.ɵtype;\n  if (type === 0 /* AnimationRendererType.Regular */) {\n    return renderer;\n  } else if (type === 1 /* AnimationRendererType.Delegated */) {\n    return renderer.animationRenderer;\n  }\n  return null;\n}\nfunction isAnimationRenderer(renderer) {\n  const type = renderer.ɵtype;\n  return type === 0 /* AnimationRendererType.Regular */ || type === 1 /* AnimationRendererType.Delegated */;\n}\nexport { AnimationBuilder, AnimationFactory, sequence, BrowserAnimationBuilder as ɵBrowserAnimationBuilder };\n", "import { trigger, state, transition, style as style$1, animate } from '@angular/animations';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Injectable, inject, forwardRef, booleanAttribute, Input, Inject, ChangeDetectionStrategy, ViewEncapsulation, Component, EventEmitter, ContentChild, ContentChildren, Output, NgModule } from '@angular/core';\nimport { hasClass } from '@primeuix/utils';\nimport { SharedModule, PrimeTemplate } from 'primeng/api';\nimport { BaseComponent } from 'primeng/basecomponent';\nimport { ChevronDownIcon, ChevronUpIcon } from 'primeng/icons';\nimport { Subject } from 'rxjs';\nimport { style } from '@primeuix/styles/organizationchart';\nimport { BaseStyle } from 'primeng/base';\nconst _c0 = [\"pOrganizationChartNode\", \"\"];\nconst _c1 = a0 => ({\n  $implicit: a0\n});\nconst _c2 = a0 => ({\n  first: a0\n});\nconst _c3 = a0 => ({\n  last: a0\n});\nfunction OrganizationChartNode_tbody_0_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r1.node.label);\n  }\n}\nfunction OrganizationChartNode_tbody_0_div_5_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction OrganizationChartNode_tbody_0_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, OrganizationChartNode_tbody_0_div_5_ng_container_1_Template, 1, 0, \"ng-container\", 4);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1.chart.getTemplateForNode(ctx_r1.node))(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(2, _c1, ctx_r1.node));\n  }\n}\nfunction OrganizationChartNode_tbody_0_ng_container_6_a_1_ng_container_1__svg_svg_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"svg\", 10);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(5);\n    i0.ɵɵclassMap(ctx_r1.cx(\"nodeToggleButtonIcon\"));\n    i0.ɵɵattribute(\"data-pc-section\", \"nodeTogglerIcon\");\n  }\n}\nfunction OrganizationChartNode_tbody_0_ng_container_6_a_1_ng_container_1__svg_svg_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"svg\", 11);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(5);\n    i0.ɵɵclassMap(ctx_r1.cx(\"nodeToggleButtonIcon\"));\n    i0.ɵɵattribute(\"data-pc-section\", \"nodeTogglerIcon\");\n  }\n}\nfunction OrganizationChartNode_tbody_0_ng_container_6_a_1_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, OrganizationChartNode_tbody_0_ng_container_6_a_1_ng_container_1__svg_svg_1_Template, 1, 3, \"svg\", 8)(2, OrganizationChartNode_tbody_0_ng_container_6_a_1_ng_container_1__svg_svg_2_Template, 1, 3, \"svg\", 9);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.node.expanded);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.node.expanded);\n  }\n}\nfunction OrganizationChartNode_tbody_0_ng_container_6_a_1_span_2_1_ng_template_0_Template(rf, ctx) {}\nfunction OrganizationChartNode_tbody_0_ng_container_6_a_1_span_2_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, OrganizationChartNode_tbody_0_ng_container_6_a_1_span_2_1_ng_template_0_Template, 0, 0, \"ng-template\");\n  }\n}\nfunction OrganizationChartNode_tbody_0_ng_container_6_a_1_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtemplate(1, OrganizationChartNode_tbody_0_ng_container_6_a_1_span_2_1_Template, 1, 0, null, 4);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(4);\n    i0.ɵɵclassMap(ctx_r1.cx(\"nodeToggleButtonIcon\"));\n    i0.ɵɵattribute(\"data-pc-section\", \"nodeTogglerIcon\");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1.chart.togglerIconTemplate || ctx_r1.chart._togglerIconTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(5, _c1, ctx_r1.node.expanded));\n  }\n}\nfunction OrganizationChartNode_tbody_0_ng_container_6_a_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"a\", 6);\n    i0.ɵɵlistener(\"click\", function OrganizationChartNode_tbody_0_ng_container_6_a_1_Template_a_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r1 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r1.toggleNode($event, ctx_r1.node));\n    })(\"keydown.enter\", function OrganizationChartNode_tbody_0_ng_container_6_a_1_Template_a_keydown_enter_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r1 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r1.toggleNode($event, ctx_r1.node));\n    })(\"keydown.space\", function OrganizationChartNode_tbody_0_ng_container_6_a_1_Template_a_keydown_space_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r1 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r1.toggleNode($event, ctx_r1.node));\n    });\n    i0.ɵɵtemplate(1, OrganizationChartNode_tbody_0_ng_container_6_a_1_ng_container_1_Template, 3, 2, \"ng-container\", 0)(2, OrganizationChartNode_tbody_0_ng_container_6_a_1_span_2_Template, 2, 7, \"span\", 7);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(3);\n    i0.ɵɵclassMap(ctx_r1.cx(\"nodeToggleButton\"));\n    i0.ɵɵattribute(\"data-pc-section\", \"nodeToggler\");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.chart.togglerIconTemplate && !ctx_r1.chart._togglerIconTemplate);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.chart.togglerIconTemplate || ctx_r1.chart._togglerIconTemplate);\n  }\n}\nfunction OrganizationChartNode_tbody_0_ng_container_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, OrganizationChartNode_tbody_0_ng_container_6_a_1_Template, 3, 5, \"a\", 5);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.leaf);\n  }\n}\nfunction OrganizationChartNode_tbody_0_ng_container_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"td\");\n    i0.ɵɵelement(2, \"div\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵattribute(\"data-pc-section\", \"lineCell\")(\"colspan\", ctx_r1.colspan);\n    i0.ɵɵadvance();\n    i0.ɵɵclassMap(ctx_r1.cx(\"connectorDown\"));\n    i0.ɵɵattribute(\"data-pc-section\", \"lineDown\");\n  }\n}\nfunction OrganizationChartNode_tbody_0_ng_container_12_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtext(1, \"\\xA0\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"td\");\n    i0.ɵɵtext(3, \"\\xA0\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const first_r4 = ctx.first;\n    const last_r5 = ctx.last;\n    const ctx_r1 = i0.ɵɵnextContext(3);\n    i0.ɵɵclassMap(ctx_r1.cx(\"connectorLeft\", i0.ɵɵpureFunction1(6, _c2, first_r4)));\n    i0.ɵɵattribute(\"data-pc-section\", \"lineLeft\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵclassMap(ctx_r1.cx(\"connectorRight\", i0.ɵɵpureFunction1(8, _c3, last_r5)));\n    i0.ɵɵattribute(\"data-pc-section\", \"lineRight\");\n  }\n}\nfunction OrganizationChartNode_tbody_0_ng_container_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, OrganizationChartNode_tbody_0_ng_container_12_ng_template_1_Template, 4, 10, \"ng-template\", 12);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.node.children);\n  }\n}\nfunction OrganizationChartNode_tbody_0_td_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 13);\n    i0.ɵɵelement(1, \"table\", 14);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const child_r6 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵattribute(\"data-pc-section\", \"nodeCell\");\n    i0.ɵɵadvance();\n    i0.ɵɵclassMap(ctx_r1.cx(\"table\"));\n    i0.ɵɵproperty(\"node\", child_r6)(\"collapsible\", ctx_r1.node.children && ctx_r1.node.children.length > 0 && ctx_r1.collapsible);\n  }\n}\nfunction OrganizationChartNode_tbody_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tbody\")(1, \"tr\")(2, \"td\")(3, \"div\", 1);\n    i0.ɵɵlistener(\"click\", function OrganizationChartNode_tbody_0_Template_div_click_3_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onNodeClick($event, ctx_r1.node));\n    });\n    i0.ɵɵtemplate(4, OrganizationChartNode_tbody_0_div_4_Template, 2, 1, \"div\", 0)(5, OrganizationChartNode_tbody_0_div_5_Template, 2, 4, \"div\", 0)(6, OrganizationChartNode_tbody_0_ng_container_6_Template, 2, 1, \"ng-container\", 0);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(7, \"tr\", 2)(8, \"td\");\n    i0.ɵɵelement(9, \"div\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(10, \"tr\", 2);\n    i0.ɵɵtemplate(11, OrganizationChartNode_tbody_0_ng_container_11_Template, 3, 5, \"ng-container\", 0)(12, OrganizationChartNode_tbody_0_ng_container_12_Template, 2, 1, \"ng-container\", 0);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"tr\", 2);\n    i0.ɵɵtemplate(14, OrganizationChartNode_tbody_0_td_14_Template, 2, 5, \"td\", 3);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"data-pc-section\", \"body\");\n    i0.ɵɵadvance();\n    i0.ɵɵattribute(\"data-pc-section\", \"row\");\n    i0.ɵɵadvance();\n    i0.ɵɵattribute(\"colspan\", ctx_r1.colspan)(\"data-pc-section\", \"cell\");\n    i0.ɵɵadvance();\n    i0.ɵɵclassMap(ctx_r1.cn(ctx_r1.cx(\"node\"), ctx_r1.node.styleClass));\n    i0.ɵɵattribute(\"data-pc-section\", \"node\");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.chart.getTemplateForNode(ctx_r1.node));\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.chart.getTemplateForNode(ctx_r1.node));\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.collapsible);\n    i0.ɵɵadvance();\n    i0.ɵɵclassMap(ctx_r1.cx(\"connectors\"));\n    i0.ɵɵproperty(\"ngStyle\", ctx_r1.getChildStyle(ctx_r1.node))(\"@childState\", \"in\");\n    i0.ɵɵattribute(\"data-pc-section\", \"lines\");\n    i0.ɵɵadvance();\n    i0.ɵɵattribute(\"data-pc-section\", \"lineCell\")(\"colspan\", ctx_r1.colspan);\n    i0.ɵɵadvance();\n    i0.ɵɵclassMap(ctx_r1.cx(\"connectorDown\"));\n    i0.ɵɵattribute(\"data-pc-section\", \"lineDown\");\n    i0.ɵɵadvance();\n    i0.ɵɵclassMap(ctx_r1.cx(\"connectors\"));\n    i0.ɵɵproperty(\"ngStyle\", ctx_r1.getChildStyle(ctx_r1.node))(\"@childState\", \"in\");\n    i0.ɵɵattribute(\"data-pc-section\", \"lines\");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.node.children && ctx_r1.node.children.length === 1);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.node.children && ctx_r1.node.children.length > 1);\n    i0.ɵɵadvance();\n    i0.ɵɵclassMap(ctx_r1.cx(\"nodeChildren\"));\n    i0.ɵɵproperty(\"ngStyle\", ctx_r1.getChildStyle(ctx_r1.node))(\"@childState\", \"in\");\n    i0.ɵɵattribute(\"data-pc-section\", \"nodes\");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.node.children);\n  }\n}\nconst _c4 = [\"togglericon\"];\nfunction OrganizationChart_table_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"table\", 1);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵclassMap(ctx_r0.cx(\"table\"));\n    i0.ɵɵproperty(\"collapsible\", ctx_r0.collapsible)(\"node\", ctx_r0.root);\n  }\n}\nconst classes = {\n  root: ({\n    instance\n  }) => ['p-organizationchart p-component', {\n    'p-organizationchart-preservespace': instance.preserveSpace\n  }],\n  table: 'p-organizationchart-table',\n  node: ({\n    instance\n  }) => ['p-organizationchart-node', {\n    'p-organizationchart-node': true,\n    'p-organizationchart-node-selectable': instance.chart.selectionMode && instance.node.selectable !== false,\n    'p-organizationchart-node-selected': instance.isSelected()\n  }],\n  nodeToggleButton: 'p-organizationchart-node-toggle-button',\n  nodeToggleButtonIcon: 'p-organizationchart-node-toggle-button-icon',\n  connectors: 'p-organizationchart-connectors',\n  connectorDown: 'p-organizationchart-connector-down',\n  connectorLeft: ({\n    first\n  }) => ['p-organizationchart-connector-left', {\n    'p-organizationchart-connector-top': !first\n  }],\n  connectorRight: ({\n    last\n  }) => ['p-organizationchart-connector-right', {\n    'p-organizationchart-connector-top': !last\n  }],\n  nodeChildren: 'p-organizationchart-node-children'\n};\nclass OrganizationChartStyle extends BaseStyle {\n  name = 'organizationchart';\n  theme = style;\n  classes = classes;\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵOrganizationChartStyle_BaseFactory;\n    return function OrganizationChartStyle_Factory(__ngFactoryType__) {\n      return (ɵOrganizationChartStyle_BaseFactory || (ɵOrganizationChartStyle_BaseFactory = i0.ɵɵgetInheritedFactory(OrganizationChartStyle)))(__ngFactoryType__ || OrganizationChartStyle);\n    };\n  })();\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: OrganizationChartStyle,\n    factory: OrganizationChartStyle.ɵfac\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(OrganizationChartStyle, [{\n    type: Injectable\n  }], null, null);\n})();\n/**\n *\n * OrganizationChart visualizes hierarchical organization data.\n *\n * [Live Demo](https://www.primeng.org/organizationchart)\n *\n * @module organizationchartstyle\n *\n */\nvar OrganizationChartClasses;\n(function (OrganizationChartClasses) {\n  /**\n   * Class name of the root element\n   */\n  OrganizationChartClasses[\"root\"] = \"p-organizationchart\";\n  /**\n   * Class name of the table element\n   */\n  OrganizationChartClasses[\"table\"] = \"p-organizationchart-table\";\n  /**\n   * Class name of the node element\n   */\n  OrganizationChartClasses[\"node\"] = \"p-organizationchart-node\";\n  /**\n   * Class name of the node toggle button element\n   */\n  OrganizationChartClasses[\"nodeToggleButton\"] = \"p-organizationchart-node-toggle-button\";\n  /**\n   * Class name of the node toggle button icon element\n   */\n  OrganizationChartClasses[\"nodeToggleButtonIcon\"] = \"p-organizationchart-node-toggle-button-icon\";\n  /**\n   * Class name of the connectors element\n   */\n  OrganizationChartClasses[\"connectors\"] = \"p-organizationchart-connectors\";\n  /**\n   * Class name of the connector down element\n   */\n  OrganizationChartClasses[\"connectorDown\"] = \"p-organizationchart-connector-down\";\n  /**\n   * Class name of the connector left element\n   */\n  OrganizationChartClasses[\"connectorLeft\"] = \"p-organizationchart-connector-left\";\n  /**\n   * Class name of the connector right element\n   */\n  OrganizationChartClasses[\"connectorRight\"] = \"p-organizationchart-connector-right\";\n  /**\n   * Class name of the node children element\n   */\n  OrganizationChartClasses[\"nodeChildren\"] = \"p-organizationchart-node-children\";\n})(OrganizationChartClasses || (OrganizationChartClasses = {}));\nclass OrganizationChartNode extends BaseComponent {\n  cd;\n  node;\n  root;\n  first;\n  last;\n  collapsible;\n  chart;\n  subscription;\n  _componentStyle = inject(OrganizationChartStyle);\n  constructor(chart, cd) {\n    super();\n    this.cd = cd;\n    this.chart = chart;\n    this.subscription = this.chart.selectionSource$.subscribe(() => {\n      this.cd.markForCheck();\n    });\n  }\n  get leaf() {\n    if (this.node) {\n      return this.node.leaf == false ? false : !(this.node.children && this.node.children.length);\n    }\n  }\n  get colspan() {\n    if (this.node) {\n      return this.node.children && this.node.children.length ? this.node.children.length * 2 : null;\n    }\n  }\n  getChildStyle(node) {\n    return {\n      visibility: !this.leaf && node.expanded ? 'inherit' : 'hidden'\n    };\n  }\n  onNodeClick(event, node) {\n    this.chart.onNodeClick(event, node);\n  }\n  toggleNode(event, node) {\n    node.expanded = !node.expanded;\n    if (node.expanded) this.chart.onNodeExpand.emit({\n      originalEvent: event,\n      node: this.node\n    });else this.chart.onNodeCollapse.emit({\n      originalEvent: event,\n      node: this.node\n    });\n    event.preventDefault();\n  }\n  isSelected() {\n    return this.chart.isSelected(this.node);\n  }\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    this.subscription.unsubscribe();\n  }\n  static ɵfac = function OrganizationChartNode_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || OrganizationChartNode)(i0.ɵɵdirectiveInject(forwardRef(() => OrganizationChart)), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: OrganizationChartNode,\n    selectors: [[\"\", \"pOrganizationChartNode\", \"\"]],\n    inputs: {\n      node: \"node\",\n      root: [2, \"root\", \"root\", booleanAttribute],\n      first: [2, \"first\", \"first\", booleanAttribute],\n      last: [2, \"last\", \"last\", booleanAttribute],\n      collapsible: [2, \"collapsible\", \"collapsible\", booleanAttribute]\n    },\n    features: [i0.ɵɵProvidersFeature([OrganizationChartStyle]), i0.ɵɵInheritDefinitionFeature],\n    attrs: _c0,\n    decls: 1,\n    vars: 1,\n    consts: [[4, \"ngIf\"], [3, \"click\"], [3, \"ngStyle\"], [\"colspan\", \"2\", 4, \"ngFor\", \"ngForOf\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [\"tabindex\", \"0\", 3, \"class\", \"click\", \"keydown.enter\", \"keydown.space\", 4, \"ngIf\"], [\"tabindex\", \"0\", 3, \"click\", \"keydown.enter\", \"keydown.space\"], [3, \"class\", 4, \"ngIf\"], [\"data-p-icon\", \"chevron-down\", 3, \"class\", 4, \"ngIf\"], [\"data-p-icon\", \"chevron-up\", 3, \"class\", 4, \"ngIf\"], [\"data-p-icon\", \"chevron-down\"], [\"data-p-icon\", \"chevron-up\"], [\"ngFor\", \"\", 3, \"ngForOf\"], [\"colspan\", \"2\"], [\"pOrganizationChartNode\", \"\", 3, \"node\", \"collapsible\"]],\n    template: function OrganizationChartNode_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, OrganizationChartNode_tbody_0_Template, 15, 33, \"tbody\", 0);\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.node);\n      }\n    },\n    dependencies: [OrganizationChartNode, CommonModule, i1.NgForOf, i1.NgIf, i1.NgTemplateOutlet, i1.NgStyle, ChevronDownIcon, ChevronUpIcon, SharedModule],\n    encapsulation: 2,\n    data: {\n      animation: [trigger('childState', [state('in', style$1({\n        opacity: 1\n      })), transition('void => *', [style$1({\n        opacity: 0\n      }), animate(150)]), transition('* => void', [animate(150, style$1({\n        opacity: 0\n      }))])])]\n    }\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(OrganizationChartNode, [{\n    type: Component,\n    args: [{\n      selector: '[pOrganizationChartNode]',\n      standalone: true,\n      imports: [CommonModule, ChevronDownIcon, ChevronUpIcon, SharedModule],\n      template: `\n        <tbody *ngIf=\"node\" [attr.data-pc-section]=\"'body'\">\n            <tr [attr.data-pc-section]=\"'row'\">\n                <td [attr.colspan]=\"colspan\" [attr.data-pc-section]=\"'cell'\">\n                    <div [class]=\"cn(cx('node'), node.styleClass)\" (click)=\"onNodeClick($event, node)\" [attr.data-pc-section]=\"'node'\">\n                        <div *ngIf=\"!chart.getTemplateForNode(node)\">{{ node.label }}</div>\n                        <div *ngIf=\"chart.getTemplateForNode(node)\">\n                            <ng-container *ngTemplateOutlet=\"chart.getTemplateForNode(node); context: { $implicit: node }\"></ng-container>\n                        </div>\n                        <ng-container *ngIf=\"collapsible\">\n                            <a\n                                *ngIf=\"!leaf\"\n                                tabindex=\"0\"\n                                [class]=\"cx('nodeToggleButton')\"\n                                (click)=\"toggleNode($event, node)\"\n                                (keydown.enter)=\"toggleNode($event, node)\"\n                                (keydown.space)=\"toggleNode($event, node)\"\n                                [attr.data-pc-section]=\"'nodeToggler'\"\n                            >\n                                <ng-container *ngIf=\"!chart.togglerIconTemplate && !chart._togglerIconTemplate\">\n                                    <svg data-p-icon=\"chevron-down\" *ngIf=\"node.expanded\" [class]=\"cx('nodeToggleButtonIcon')\" [attr.data-pc-section]=\"'nodeTogglerIcon'\" />\n                                    <svg data-p-icon=\"chevron-up\" *ngIf=\"!node.expanded\" [class]=\"cx('nodeToggleButtonIcon')\" [attr.data-pc-section]=\"'nodeTogglerIcon'\" />\n                                </ng-container>\n                                <span [class]=\"cx('nodeToggleButtonIcon')\" *ngIf=\"chart.togglerIconTemplate || chart._togglerIconTemplate\" [attr.data-pc-section]=\"'nodeTogglerIcon'\">\n                                    <ng-template *ngTemplateOutlet=\"chart.togglerIconTemplate || chart._togglerIconTemplate; context: { $implicit: node.expanded }\"></ng-template>\n                                </span>\n                            </a>\n                        </ng-container>\n                    </div>\n                </td>\n            </tr>\n            <tr [ngStyle]=\"getChildStyle(node)\" [class]=\"cx('connectors')\" [@childState]=\"'in'\" [attr.data-pc-section]=\"'lines'\">\n                <td [attr.data-pc-section]=\"'lineCell'\" [attr.colspan]=\"colspan\">\n                    <div [attr.data-pc-section]=\"'lineDown'\" [class]=\"cx('connectorDown')\"></div>\n                </td>\n            </tr>\n            <tr [ngStyle]=\"getChildStyle(node)\" [class]=\"cx('connectors')\" [@childState]=\"'in'\" [attr.data-pc-section]=\"'lines'\">\n                <ng-container *ngIf=\"node.children && node.children.length === 1\">\n                    <td [attr.data-pc-section]=\"'lineCell'\" [attr.colspan]=\"colspan\">\n                        <div [attr.data-pc-section]=\"'lineDown'\" [class]=\"cx('connectorDown')\"></div>\n                    </td>\n                </ng-container>\n                <ng-container *ngIf=\"node.children && node.children.length > 1\">\n                    <ng-template ngFor let-child [ngForOf]=\"node.children\" let-first=\"first\" let-last=\"last\">\n                        <td [attr.data-pc-section]=\"'lineLeft'\" [class]=\"cx('connectorLeft', { first })\">&nbsp;</td>\n                        <td [attr.data-pc-section]=\"'lineRight'\" [class]=\"cx('connectorRight', { last })\">&nbsp;</td>\n                    </ng-template>\n                </ng-container>\n            </tr>\n            <tr [ngStyle]=\"getChildStyle(node)\" [class]=\"cx('nodeChildren')\" [@childState]=\"'in'\" [attr.data-pc-section]=\"'nodes'\">\n                <td *ngFor=\"let child of node.children\" colspan=\"2\" [attr.data-pc-section]=\"'nodeCell'\">\n                    <table [class]=\"cx('table')\" pOrganizationChartNode [node]=\"child\" [collapsible]=\"node.children && node.children.length > 0 && collapsible\"></table>\n                </td>\n            </tr>\n        </tbody>\n    `,\n      animations: [trigger('childState', [state('in', style$1({\n        opacity: 1\n      })), transition('void => *', [style$1({\n        opacity: 0\n      }), animate(150)]), transition('* => void', [animate(150, style$1({\n        opacity: 0\n      }))])])],\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.Default,\n      providers: [OrganizationChartStyle]\n    }]\n  }], () => [{\n    type: OrganizationChart,\n    decorators: [{\n      type: Inject,\n      args: [forwardRef(() => OrganizationChart)]\n    }]\n  }, {\n    type: i0.ChangeDetectorRef\n  }], {\n    node: [{\n      type: Input\n    }],\n    root: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    first: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    last: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    collapsible: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }]\n  });\n})();\n/**\n * OrganizationChart visualizes hierarchical organization data.\n * @group Components\n */\nclass OrganizationChart extends BaseComponent {\n  el;\n  cd;\n  /**\n   * An array of nested TreeNodes.\n   * @group Props\n   */\n  value;\n  /**\n   * Style class of the component.\n   * @deprecated since v20.0.0, use `class` instead.\n   * @group Props\n   */\n  styleClass;\n  /**\n   * Defines the selection mode.\n   * @group Props\n   */\n  selectionMode;\n  /**\n   * Whether the nodes can be expanded or toggled.\n   * @group Props\n   */\n  collapsible;\n  /**\n   * Whether the space allocated by a node is preserved when hidden.\n   * @deprecated since v20.0.0.\n   * @group Props\n   */\n  preserveSpace = true;\n  /**\n   * A single treenode instance or an array to refer to the selections.\n   * @group Props\n   */\n  get selection() {\n    return this._selection;\n  }\n  set selection(val) {\n    this._selection = val;\n    if (this.initialized) this.selectionSource.next(null);\n  }\n  /**\n   * Callback to invoke on selection change.\n   * @param {*} any - selected value.\n   * @group Emits\n   */\n  selectionChange = new EventEmitter();\n  /**\n   * Callback to invoke when a node is selected.\n   * @param {OrganizationChartNodeSelectEvent} event - custom node select event.\n   * @group Emits\n   */\n  onNodeSelect = new EventEmitter();\n  /**\n   * Callback to invoke when a node is unselected.\n   * @param {OrganizationChartNodeUnSelectEvent} event - custom node unselect event.\n   * @group Emits\n   */\n  onNodeUnselect = new EventEmitter();\n  /**\n   * Callback to invoke when a node is expanded.\n   * @param {OrganizationChartNodeExpandEvent} event - custom node expand event.\n   * @group Emits\n   */\n  onNodeExpand = new EventEmitter();\n  /**\n   * Callback to invoke when a node is collapsed.\n   * @param {OrganizationChartNodeCollapseEvent} event - custom node collapse event.\n   * @group Emits\n   */\n  onNodeCollapse = new EventEmitter();\n  templates;\n  togglerIconTemplate;\n  templateMap;\n  _togglerIconTemplate;\n  selectionSource = new Subject();\n  _selection;\n  initialized;\n  selectionSource$ = this.selectionSource.asObservable();\n  _componentStyle = inject(OrganizationChartStyle);\n  constructor(el, cd) {\n    super();\n    this.el = el;\n    this.cd = cd;\n  }\n  get root() {\n    return this.value && this.value.length ? this.value[0] : null;\n  }\n  ngAfterContentInit() {\n    if (this.templates.length) {\n      this.templateMap = {};\n    }\n    this.templates.forEach(item => {\n      if (item.getType() === 'togglericon') {\n        this._togglerIconTemplate = item.template;\n      } else {\n        this.templateMap[item.getType()] = item.template;\n      }\n    });\n    this.initialized = true;\n  }\n  getTemplateForNode(node) {\n    if (this.templateMap) return node.type ? this.templateMap[node.type] : this.templateMap['default'];else return null;\n  }\n  onNodeClick(event, node) {\n    let eventTarget = event.target;\n    if (eventTarget.className && (hasClass(eventTarget, 'p-organizationchart-node-toggle-button') || hasClass(eventTarget, 'p-organizationchart-node-toggle-button-icon'))) {\n      return;\n    } else if (this.selectionMode) {\n      if (node.selectable === false) {\n        return;\n      }\n      let index = this.findIndexInSelection(node);\n      let selected = index >= 0;\n      if (this.selectionMode === 'single') {\n        if (selected) {\n          this.selection = null;\n          this.onNodeUnselect.emit({\n            originalEvent: event,\n            node: node\n          });\n        } else {\n          this.selection = node;\n          this.onNodeSelect.emit({\n            originalEvent: event,\n            node: node\n          });\n        }\n      } else if (this.selectionMode === 'multiple') {\n        if (selected) {\n          this.selection = this.selection.filter((val, i) => i != index);\n          this.onNodeUnselect.emit({\n            originalEvent: event,\n            node: node\n          });\n        } else {\n          this.selection = [...(this.selection || []), node];\n          this.onNodeSelect.emit({\n            originalEvent: event,\n            node: node\n          });\n        }\n      }\n      this.selectionChange.emit(this.selection);\n      this.selectionSource.next(null);\n    }\n  }\n  findIndexInSelection(node) {\n    let index = -1;\n    if (this.selectionMode && this.selection) {\n      if (this.selectionMode === 'single') {\n        index = this.selection == node ? 0 : -1;\n      } else if (this.selectionMode === 'multiple') {\n        for (let i = 0; i < this.selection.length; i++) {\n          if (this.selection[i] == node) {\n            index = i;\n            break;\n          }\n        }\n      }\n    }\n    return index;\n  }\n  isSelected(node) {\n    return this.findIndexInSelection(node) != -1;\n  }\n  static ɵfac = function OrganizationChart_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || OrganizationChart)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: OrganizationChart,\n    selectors: [[\"p-organizationChart\"], [\"p-organization-chart\"], [\"p-organizationchart\"]],\n    contentQueries: function OrganizationChart_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, _c4, 4);\n        i0.ɵɵcontentQuery(dirIndex, PrimeTemplate, 4);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.togglerIconTemplate = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.templates = _t);\n      }\n    },\n    hostVars: 3,\n    hostBindings: function OrganizationChart_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵattribute(\"data-pc-section\", \"root\");\n        i0.ɵɵclassMap(ctx.cn(ctx.cx(\"root\"), ctx.styleClass));\n      }\n    },\n    inputs: {\n      value: \"value\",\n      styleClass: \"styleClass\",\n      selectionMode: \"selectionMode\",\n      collapsible: [2, \"collapsible\", \"collapsible\", booleanAttribute],\n      preserveSpace: [2, \"preserveSpace\", \"preserveSpace\", booleanAttribute],\n      selection: \"selection\"\n    },\n    outputs: {\n      selectionChange: \"selectionChange\",\n      onNodeSelect: \"onNodeSelect\",\n      onNodeUnselect: \"onNodeUnselect\",\n      onNodeExpand: \"onNodeExpand\",\n      onNodeCollapse: \"onNodeCollapse\"\n    },\n    features: [i0.ɵɵProvidersFeature([OrganizationChartStyle]), i0.ɵɵInheritDefinitionFeature],\n    decls: 1,\n    vars: 1,\n    consts: [[\"pOrganizationChartNode\", \"\", 3, \"class\", \"collapsible\", \"node\", 4, \"ngIf\"], [\"pOrganizationChartNode\", \"\", 3, \"collapsible\", \"node\"]],\n    template: function OrganizationChart_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, OrganizationChart_table_0_Template, 1, 4, \"table\", 0);\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.root);\n      }\n    },\n    dependencies: [CommonModule, i1.NgIf, OrganizationChartNode, SharedModule],\n    encapsulation: 2\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(OrganizationChart, [{\n    type: Component,\n    args: [{\n      selector: 'p-organizationChart, p-organization-chart, p-organizationchart',\n      standalone: true,\n      imports: [CommonModule, OrganizationChartNode, SharedModule],\n      template: ` <table [class]=\"cx('table')\" [collapsible]=\"collapsible\" pOrganizationChartNode [node]=\"root\" *ngIf=\"root\"></table> `,\n      changeDetection: ChangeDetectionStrategy.Default,\n      providers: [OrganizationChartStyle],\n      host: {\n        '[attr.data-pc-section]': \"'root'\",\n        '[class]': \"cn(cx('root'), styleClass)\"\n      }\n    }]\n  }], () => [{\n    type: i0.ElementRef\n  }, {\n    type: i0.ChangeDetectorRef\n  }], {\n    value: [{\n      type: Input\n    }],\n    styleClass: [{\n      type: Input\n    }],\n    selectionMode: [{\n      type: Input\n    }],\n    collapsible: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    preserveSpace: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    selection: [{\n      type: Input\n    }],\n    selectionChange: [{\n      type: Output\n    }],\n    onNodeSelect: [{\n      type: Output\n    }],\n    onNodeUnselect: [{\n      type: Output\n    }],\n    onNodeExpand: [{\n      type: Output\n    }],\n    onNodeCollapse: [{\n      type: Output\n    }],\n    templates: [{\n      type: ContentChildren,\n      args: [PrimeTemplate]\n    }],\n    togglerIconTemplate: [{\n      type: ContentChild,\n      args: ['togglericon', {\n        descendants: false\n      }]\n    }]\n  });\n})();\nclass OrganizationChartModule {\n  static ɵfac = function OrganizationChartModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || OrganizationChartModule)();\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: OrganizationChartModule,\n    imports: [OrganizationChart, OrganizationChartNode, SharedModule],\n    exports: [OrganizationChart, OrganizationChartNode, SharedModule]\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [OrganizationChart, OrganizationChartNode, SharedModule, SharedModule]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(OrganizationChartModule, [{\n    type: NgModule,\n    args: [{\n      imports: [OrganizationChart, OrganizationChartNode, SharedModule],\n      exports: [OrganizationChart, OrganizationChartNode, SharedModule]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { OrganizationChart, OrganizationChartClasses, OrganizationChartModule, OrganizationChartNode, OrganizationChartStyle };\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2DA,IAAM,mBAAN,MAAM,kBAAiB;AAAA,EACrB,OAAO,OAAO,SAAS,yBAAyB,mBAAmB;AACjE,WAAO,KAAK,qBAAqB,mBAAkB;AAAA,EACrD;AAAA,EACA,OAAO,QAA0B,mBAAmB;AAAA,IAClD,OAAO;AAAA,IACP,SAAS,OAAO,MAAM,OAAO,uBAAuB,GAAG;AAAA,IACvD,YAAY;AAAA,EACd,CAAC;AACH;AAAA,CACC,MAAM;AACL,GAAC,OAAO,cAAc,eAAe,cAAiB,iBAAkB,kBAAkB,CAAC;AAAA,IACzF,MAAM;AAAA,IACN,MAAM,CAAC;AAAA,MACL,YAAY;AAAA,MACZ,YAAY,MAAM,OAAO,uBAAuB;AAAA,IAClD,CAAC;AAAA,EACH,CAAC,GAAG,MAAM,IAAI;AAChB,GAAG;AAUH,IAAM,mBAAN,MAAuB;AAAC;AACxB,IAAM,0BAAN,MAAM,iCAAgC,iBAAiB;AAAA,EACrD,sBAAsB,OAAO,uBAAuB;AAAA,IAClD,UAAU;AAAA,EACZ,CAAC;AAAA,EACD,mBAAmB;AAAA,EACnB;AAAA,EACA,YAAY,cAAc,KAAK;AAC7B,UAAM;AACN,UAAM,WAAW;AAAA,MACf,IAAI;AAAA,MACJ,eAAe,kBAAkB;AAAA,MACjC,QAAQ,CAAC;AAAA,MACT,MAAM;AAAA,QACJ,WAAW,CAAC;AAAA,MACd;AAAA,IACF;AACA,SAAK,YAAY,aAAa,eAAe,IAAI,MAAM,QAAQ;AAC/D,QAAI,KAAK,wBAAwB,QAAQ,CAAC,oBAAoB,KAAK,SAAS,GAAG;AAE7E,YAAM,IAAI,aAAc,OAAoF,OAAO,cAAc,eAAe,cAAc,4OAAiP;AAAA,IACjZ;AAAA,EACF;AAAA,EACA,MAAMA,YAAW;AACf,UAAM,KAAK,KAAK;AAChB,SAAK;AACL,UAAM,QAAQ,MAAM,QAAQA,UAAS,IAAI,SAASA,UAAS,IAAIA;AAC/D,0BAAsB,KAAK,WAAW,MAAM,IAAI,YAAY,CAAC,KAAK,CAAC;AACnE,WAAO,IAAI,wBAAwB,IAAI,KAAK,SAAS;AAAA,EACvD;AAAA,EACA,OAAO,OAAO,SAAS,gCAAgC,mBAAmB;AACxE,WAAO,KAAK,qBAAqB,0BAA4B,SAAY,gBAAgB,GAAM,SAAS,QAAQ,CAAC;AAAA,EACnH;AAAA,EACA,OAAO,QAA0B,mBAAmB;AAAA,IAClD,OAAO;AAAA,IACP,SAAS,yBAAwB;AAAA,IACjC,YAAY;AAAA,EACd,CAAC;AACH;AAAA,CACC,MAAM;AACL,GAAC,OAAO,cAAc,eAAe,cAAiB,iBAAkB,yBAAyB,CAAC;AAAA,IAChG,MAAM;AAAA,IACN,MAAM,CAAC;AAAA,MACL,YAAY;AAAA,IACd,CAAC;AAAA,EACH,CAAC,GAAG,MAAM,CAAC;AAAA,IACT,MAAS;AAAA,EACX,GAAG;AAAA,IACD,MAAM;AAAA,IACN,YAAY,CAAC;AAAA,MACX,MAAM;AAAA,MACN,MAAM,CAAC,QAAQ;AAAA,IACjB,CAAC;AAAA,EACH,CAAC,GAAG,IAAI;AACV,GAAG;AACH,IAAM,0BAAN,cAAsC,iBAAiB;AAAA,EACrD;AAAA,EACA;AAAA,EACA,YAAY,KAAK,WAAW;AAC1B,UAAM;AACN,SAAK,MAAM;AACX,SAAK,YAAY;AAAA,EACnB;AAAA,EACA,OAAO,SAAS,SAAS;AACvB,WAAO,IAAI,wBAAwB,KAAK,KAAK,SAAS,WAAW,CAAC,GAAG,KAAK,SAAS;AAAA,EACrF;AACF;AACA,IAAM,0BAAN,MAA8B;AAAA,EAC5B;AAAA,EACA;AAAA,EACA;AAAA,EACA,eAAe;AAAA,EACf,WAAW;AAAA,EACX,YAAY,IAAI,SAAS,SAAS,WAAW;AAC3C,SAAK,KAAK;AACV,SAAK,UAAU;AACf,SAAK,YAAY;AACjB,SAAK,SAAS,UAAU,OAAO;AAAA,EACjC;AAAA,EACA,QAAQ,WAAW,UAAU;AAC3B,WAAO,KAAK,UAAU,OAAO,KAAK,SAAS,KAAK,KAAK,EAAE,IAAI,SAAS,IAAI,QAAQ;AAAA,EAClF;AAAA,EACA,SAAS,YAAY,MAAM;AACzB,0BAAsB,KAAK,WAAW,KAAK,SAAS,KAAK,IAAI,SAAS,IAAI;AAAA,EAC5E;AAAA,EACA,OAAO,IAAI;AACT,SAAK,QAAQ,QAAQ,EAAE;AAAA,EACzB;AAAA,EACA,QAAQ,IAAI;AACV,SAAK,QAAQ,SAAS,EAAE;AAAA,EAC1B;AAAA,EACA,UAAU,IAAI;AACZ,SAAK,QAAQ,WAAW,EAAE;AAAA,EAC5B;AAAA,EACA,OAAO;AACL,SAAK,SAAS,MAAM;AAAA,EACtB;AAAA,EACA,aAAa;AACX,WAAO,KAAK;AAAA,EACd;AAAA,EACA,OAAO;AACL,SAAK,SAAS,MAAM;AACpB,SAAK,WAAW;AAAA,EAClB;AAAA,EACA,QAAQ;AACN,SAAK,SAAS,OAAO;AAAA,EACvB;AAAA,EACA,UAAU;AACR,SAAK,SAAS,SAAS;AAAA,EACzB;AAAA,EACA,SAAS;AACP,SAAK,SAAS,QAAQ;AAAA,EACxB;AAAA,EACA,UAAU;AACR,SAAK,SAAS,SAAS;AAAA,EACzB;AAAA,EACA,QAAQ;AACN,SAAK,SAAS,OAAO;AACrB,SAAK,WAAW;AAAA,EAClB;AAAA,EACA,YAAY,GAAG;AACb,SAAK,SAAS,eAAe,CAAC;AAAA,EAChC;AAAA,EACA,cAAc;AACZ,WAAO,wBAAwB,KAAK,SAAS,GAAG,QAAQ,QAAQ,KAAK,EAAE,GAAG,YAAY,KAAK;AAAA,EAC7F;AAAA,EACA,YAAY;AACd;AACA,SAAS,sBAAsB,UAAU,SAAS,IAAI,SAAS,MAAM;AACnE,WAAS,YAAY,SAAS,KAAK,EAAE,IAAI,OAAO,IAAI,IAAI;AAC1D;AAKA,SAAS,wBAAwB,UAAU;AACzC,QAAM,OAAO,SAAS;AACtB,MAAI,SAAS,GAAuC;AAClD,WAAO;AAAA,EACT,WAAW,SAAS,GAAyC;AAC3D,WAAO,SAAS;AAAA,EAClB;AACA,SAAO;AACT;AACA,SAAS,oBAAoB,UAAU;AACrC,QAAM,OAAO,SAAS;AACtB,SAAO,SAAS,KAAyC,SAAS;AACpE;A;;;;;AC9NA,IAAM,MAAM,CAAC,0BAA0B,EAAE;AACzC,IAAM,MAAM,SAAO;AAAA,EACjB,WAAW;AACb;AACA,IAAM,MAAM,SAAO;AAAA,EACjB,OAAO;AACT;AACA,IAAM,MAAM,SAAO;AAAA,EACjB,MAAM;AACR;AACA,SAAS,6CAA6C,IAAI,KAAK;AAC7D,MAAI,KAAK,GAAG;AACV,IAAG,eAAe,GAAG,KAAK;AAC1B,IAAG,OAAO,CAAC;AACX,IAAG,aAAa;AAAA,EAClB;AACA,MAAI,KAAK,GAAG;AACV,UAAM,SAAY,cAAc,CAAC;AACjC,IAAG,UAAU;AACb,IAAG,kBAAkB,OAAO,KAAK,KAAK;AAAA,EACxC;AACF;AACA,SAAS,4DAA4D,IAAI,KAAK;AAC5E,MAAI,KAAK,GAAG;AACV,IAAG,mBAAmB,CAAC;AAAA,EACzB;AACF;AACA,SAAS,6CAA6C,IAAI,KAAK;AAC7D,MAAI,KAAK,GAAG;AACV,IAAG,eAAe,GAAG,KAAK;AAC1B,IAAG,WAAW,GAAG,6DAA6D,GAAG,GAAG,gBAAgB,CAAC;AACrG,IAAG,aAAa;AAAA,EAClB;AACA,MAAI,KAAK,GAAG;AACV,UAAM,SAAY,cAAc,CAAC;AACjC,IAAG,UAAU;AACb,IAAG,WAAW,oBAAoB,OAAO,MAAM,mBAAmB,OAAO,IAAI,CAAC,EAAE,2BAA8B,gBAAgB,GAAG,KAAK,OAAO,IAAI,CAAC;AAAA,EACpJ;AACF;AACA,SAAS,oFAAoF,IAAI,KAAK;AACpG,MAAI,KAAK,GAAG;AACV,IAAG,eAAe;AAClB,IAAG,UAAU,GAAG,OAAO,EAAE;AAAA,EAC3B;AACA,MAAI,KAAK,GAAG;AACV,UAAM,SAAY,cAAc,CAAC;AACjC,IAAG,WAAW,OAAO,GAAG,sBAAsB,CAAC;AAC/C,IAAG,YAAY,mBAAmB,iBAAiB;AAAA,EACrD;AACF;AACA,SAAS,oFAAoF,IAAI,KAAK;AACpG,MAAI,KAAK,GAAG;AACV,IAAG,eAAe;AAClB,IAAG,UAAU,GAAG,OAAO,EAAE;AAAA,EAC3B;AACA,MAAI,KAAK,GAAG;AACV,UAAM,SAAY,cAAc,CAAC;AACjC,IAAG,WAAW,OAAO,GAAG,sBAAsB,CAAC;AAC/C,IAAG,YAAY,mBAAmB,iBAAiB;AAAA,EACrD;AACF;AACA,SAAS,yEAAyE,IAAI,KAAK;AACzF,MAAI,KAAK,GAAG;AACV,IAAG,wBAAwB,CAAC;AAC5B,IAAG,WAAW,GAAG,qFAAqF,GAAG,GAAG,OAAO,CAAC,EAAE,GAAG,qFAAqF,GAAG,GAAG,OAAO,CAAC;AAC5N,IAAG,sBAAsB;AAAA,EAC3B;AACA,MAAI,KAAK,GAAG;AACV,UAAM,SAAY,cAAc,CAAC;AACjC,IAAG,UAAU;AACb,IAAG,WAAW,QAAQ,OAAO,KAAK,QAAQ;AAC1C,IAAG,UAAU;AACb,IAAG,WAAW,QAAQ,CAAC,OAAO,KAAK,QAAQ;AAAA,EAC7C;AACF;AACA,SAAS,iFAAiF,IAAI,KAAK;AAAC;AACpG,SAAS,mEAAmE,IAAI,KAAK;AACnF,MAAI,KAAK,GAAG;AACV,IAAG,WAAW,GAAG,kFAAkF,GAAG,GAAG,aAAa;AAAA,EACxH;AACF;AACA,SAAS,iEAAiE,IAAI,KAAK;AACjF,MAAI,KAAK,GAAG;AACV,IAAG,eAAe,GAAG,MAAM;AAC3B,IAAG,WAAW,GAAG,oEAAoE,GAAG,GAAG,MAAM,CAAC;AAClG,IAAG,aAAa;AAAA,EAClB;AACA,MAAI,KAAK,GAAG;AACV,UAAM,SAAY,cAAc,CAAC;AACjC,IAAG,WAAW,OAAO,GAAG,sBAAsB,CAAC;AAC/C,IAAG,YAAY,mBAAmB,iBAAiB;AACnD,IAAG,UAAU;AACb,IAAG,WAAW,oBAAoB,OAAO,MAAM,uBAAuB,OAAO,MAAM,oBAAoB,EAAE,2BAA8B,gBAAgB,GAAG,KAAK,OAAO,KAAK,QAAQ,CAAC;AAAA,EACtL;AACF;AACA,SAAS,0DAA0D,IAAI,KAAK;AAC1E,MAAI,KAAK,GAAG;AACV,UAAM,MAAS,iBAAiB;AAChC,IAAG,eAAe,GAAG,KAAK,CAAC;AAC3B,IAAG,WAAW,SAAS,SAAS,6EAA6E,QAAQ;AACnH,MAAG,cAAc,GAAG;AACpB,YAAM,SAAY,cAAc,CAAC;AACjC,aAAU,YAAY,OAAO,WAAW,QAAQ,OAAO,IAAI,CAAC;AAAA,IAC9D,CAAC,EAAE,iBAAiB,SAAS,qFAAqF,QAAQ;AACxH,MAAG,cAAc,GAAG;AACpB,YAAM,SAAY,cAAc,CAAC;AACjC,aAAU,YAAY,OAAO,WAAW,QAAQ,OAAO,IAAI,CAAC;AAAA,IAC9D,CAAC,EAAE,iBAAiB,SAAS,qFAAqF,QAAQ;AACxH,MAAG,cAAc,GAAG;AACpB,YAAM,SAAY,cAAc,CAAC;AACjC,aAAU,YAAY,OAAO,WAAW,QAAQ,OAAO,IAAI,CAAC;AAAA,IAC9D,CAAC;AACD,IAAG,WAAW,GAAG,0EAA0E,GAAG,GAAG,gBAAgB,CAAC,EAAE,GAAG,kEAAkE,GAAG,GAAG,QAAQ,CAAC;AACxM,IAAG,aAAa;AAAA,EAClB;AACA,MAAI,KAAK,GAAG;AACV,UAAM,SAAY,cAAc,CAAC;AACjC,IAAG,WAAW,OAAO,GAAG,kBAAkB,CAAC;AAC3C,IAAG,YAAY,mBAAmB,aAAa;AAC/C,IAAG,UAAU;AACb,IAAG,WAAW,QAAQ,CAAC,OAAO,MAAM,uBAAuB,CAAC,OAAO,MAAM,oBAAoB;AAC7F,IAAG,UAAU;AACb,IAAG,WAAW,QAAQ,OAAO,MAAM,uBAAuB,OAAO,MAAM,oBAAoB;AAAA,EAC7F;AACF;AACA,SAAS,sDAAsD,IAAI,KAAK;AACtE,MAAI,KAAK,GAAG;AACV,IAAG,wBAAwB,CAAC;AAC5B,IAAG,WAAW,GAAG,2DAA2D,GAAG,GAAG,KAAK,CAAC;AACxF,IAAG,sBAAsB;AAAA,EAC3B;AACA,MAAI,KAAK,GAAG;AACV,UAAM,SAAY,cAAc,CAAC;AACjC,IAAG,UAAU;AACb,IAAG,WAAW,QAAQ,CAAC,OAAO,IAAI;AAAA,EACpC;AACF;AACA,SAAS,uDAAuD,IAAI,KAAK;AACvE,MAAI,KAAK,GAAG;AACV,IAAG,wBAAwB,CAAC;AAC5B,IAAG,eAAe,GAAG,IAAI;AACzB,IAAG,UAAU,GAAG,KAAK;AACrB,IAAG,aAAa;AAChB,IAAG,sBAAsB;AAAA,EAC3B;AACA,MAAI,KAAK,GAAG;AACV,UAAM,SAAY,cAAc,CAAC;AACjC,IAAG,UAAU;AACb,IAAG,YAAY,mBAAmB,UAAU,EAAE,WAAW,OAAO,OAAO;AACvE,IAAG,UAAU;AACb,IAAG,WAAW,OAAO,GAAG,eAAe,CAAC;AACxC,IAAG,YAAY,mBAAmB,UAAU;AAAA,EAC9C;AACF;AACA,SAAS,qEAAqE,IAAI,KAAK;AACrF,MAAI,KAAK,GAAG;AACV,IAAG,eAAe,GAAG,IAAI;AACzB,IAAG,OAAO,GAAG,GAAM;AACnB,IAAG,aAAa;AAChB,IAAG,eAAe,GAAG,IAAI;AACzB,IAAG,OAAO,GAAG,GAAM;AACnB,IAAG,aAAa;AAAA,EAClB;AACA,MAAI,KAAK,GAAG;AACV,UAAM,WAAW,IAAI;AACrB,UAAM,UAAU,IAAI;AACpB,UAAM,SAAY,cAAc,CAAC;AACjC,IAAG,WAAW,OAAO,GAAG,iBAAoB,gBAAgB,GAAG,KAAK,QAAQ,CAAC,CAAC;AAC9E,IAAG,YAAY,mBAAmB,UAAU;AAC5C,IAAG,UAAU,CAAC;AACd,IAAG,WAAW,OAAO,GAAG,kBAAqB,gBAAgB,GAAG,KAAK,OAAO,CAAC,CAAC;AAC9E,IAAG,YAAY,mBAAmB,WAAW;AAAA,EAC/C;AACF;AACA,SAAS,uDAAuD,IAAI,KAAK;AACvE,MAAI,KAAK,GAAG;AACV,IAAG,wBAAwB,CAAC;AAC5B,IAAG,WAAW,GAAG,sEAAsE,GAAG,IAAI,eAAe,EAAE;AAC/G,IAAG,sBAAsB;AAAA,EAC3B;AACA,MAAI,KAAK,GAAG;AACV,UAAM,SAAY,cAAc,CAAC;AACjC,IAAG,UAAU;AACb,IAAG,WAAW,WAAW,OAAO,KAAK,QAAQ;AAAA,EAC/C;AACF;AACA,SAAS,6CAA6C,IAAI,KAAK;AAC7D,MAAI,KAAK,GAAG;AACV,IAAG,eAAe,GAAG,MAAM,EAAE;AAC7B,IAAG,UAAU,GAAG,SAAS,EAAE;AAC3B,IAAG,aAAa;AAAA,EAClB;AACA,MAAI,KAAK,GAAG;AACV,UAAM,WAAW,IAAI;AACrB,UAAM,SAAY,cAAc,CAAC;AACjC,IAAG,YAAY,mBAAmB,UAAU;AAC5C,IAAG,UAAU;AACb,IAAG,WAAW,OAAO,GAAG,OAAO,CAAC;AAChC,IAAG,WAAW,QAAQ,QAAQ,EAAE,eAAe,OAAO,KAAK,YAAY,OAAO,KAAK,SAAS,SAAS,KAAK,OAAO,WAAW;AAAA,EAC9H;AACF;AACA,SAAS,uCAAuC,IAAI,KAAK;AACvD,MAAI,KAAK,GAAG;AACV,UAAM,MAAS,iBAAiB;AAChC,IAAG,eAAe,GAAG,OAAO,EAAE,GAAG,IAAI,EAAE,GAAG,IAAI,EAAE,GAAG,OAAO,CAAC;AAC3D,IAAG,WAAW,SAAS,SAAS,4DAA4D,QAAQ;AAClG,MAAG,cAAc,GAAG;AACpB,YAAM,SAAY,cAAc;AAChC,aAAU,YAAY,OAAO,YAAY,QAAQ,OAAO,IAAI,CAAC;AAAA,IAC/D,CAAC;AACD,IAAG,WAAW,GAAG,8CAA8C,GAAG,GAAG,OAAO,CAAC,EAAE,GAAG,8CAA8C,GAAG,GAAG,OAAO,CAAC,EAAE,GAAG,uDAAuD,GAAG,GAAG,gBAAgB,CAAC;AACjO,IAAG,aAAa,EAAE,EAAE;AACpB,IAAG,eAAe,GAAG,MAAM,CAAC,EAAE,GAAG,IAAI;AACrC,IAAG,UAAU,GAAG,KAAK;AACrB,IAAG,aAAa,EAAE;AAClB,IAAG,eAAe,IAAI,MAAM,CAAC;AAC7B,IAAG,WAAW,IAAI,wDAAwD,GAAG,GAAG,gBAAgB,CAAC,EAAE,IAAI,wDAAwD,GAAG,GAAG,gBAAgB,CAAC;AACtL,IAAG,aAAa;AAChB,IAAG,eAAe,IAAI,MAAM,CAAC;AAC7B,IAAG,WAAW,IAAI,8CAA8C,GAAG,GAAG,MAAM,CAAC;AAC7E,IAAG,aAAa,EAAE;AAAA,EACpB;AACA,MAAI,KAAK,GAAG;AACV,UAAM,SAAY,cAAc;AAChC,IAAG,YAAY,mBAAmB,MAAM;AACxC,IAAG,UAAU;AACb,IAAG,YAAY,mBAAmB,KAAK;AACvC,IAAG,UAAU;AACb,IAAG,YAAY,WAAW,OAAO,OAAO,EAAE,mBAAmB,MAAM;AACnE,IAAG,UAAU;AACb,IAAG,WAAW,OAAO,GAAG,OAAO,GAAG,MAAM,GAAG,OAAO,KAAK,UAAU,CAAC;AAClE,IAAG,YAAY,mBAAmB,MAAM;AACxC,IAAG,UAAU;AACb,IAAG,WAAW,QAAQ,CAAC,OAAO,MAAM,mBAAmB,OAAO,IAAI,CAAC;AACnE,IAAG,UAAU;AACb,IAAG,WAAW,QAAQ,OAAO,MAAM,mBAAmB,OAAO,IAAI,CAAC;AAClE,IAAG,UAAU;AACb,IAAG,WAAW,QAAQ,OAAO,WAAW;AACxC,IAAG,UAAU;AACb,IAAG,WAAW,OAAO,GAAG,YAAY,CAAC;AACrC,IAAG,WAAW,WAAW,OAAO,cAAc,OAAO,IAAI,CAAC,EAAE,eAAe,IAAI;AAC/E,IAAG,YAAY,mBAAmB,OAAO;AACzC,IAAG,UAAU;AACb,IAAG,YAAY,mBAAmB,UAAU,EAAE,WAAW,OAAO,OAAO;AACvE,IAAG,UAAU;AACb,IAAG,WAAW,OAAO,GAAG,eAAe,CAAC;AACxC,IAAG,YAAY,mBAAmB,UAAU;AAC5C,IAAG,UAAU;AACb,IAAG,WAAW,OAAO,GAAG,YAAY,CAAC;AACrC,IAAG,WAAW,WAAW,OAAO,cAAc,OAAO,IAAI,CAAC,EAAE,eAAe,IAAI;AAC/E,IAAG,YAAY,mBAAmB,OAAO;AACzC,IAAG,UAAU;AACb,IAAG,WAAW,QAAQ,OAAO,KAAK,YAAY,OAAO,KAAK,SAAS,WAAW,CAAC;AAC/E,IAAG,UAAU;AACb,IAAG,WAAW,QAAQ,OAAO,KAAK,YAAY,OAAO,KAAK,SAAS,SAAS,CAAC;AAC7E,IAAG,UAAU;AACb,IAAG,WAAW,OAAO,GAAG,cAAc,CAAC;AACvC,IAAG,WAAW,WAAW,OAAO,cAAc,OAAO,IAAI,CAAC,EAAE,eAAe,IAAI;AAC/E,IAAG,YAAY,mBAAmB,OAAO;AACzC,IAAG,UAAU;AACb,IAAG,WAAW,WAAW,OAAO,KAAK,QAAQ;AAAA,EAC/C;AACF;AACA,IAAM,MAAM,CAAC,aAAa;AAC1B,SAAS,mCAAmC,IAAI,KAAK;AACnD,MAAI,KAAK,GAAG;AACV,IAAG,UAAU,GAAG,SAAS,CAAC;AAAA,EAC5B;AACA,MAAI,KAAK,GAAG;AACV,UAAM,SAAY,cAAc;AAChC,IAAG,WAAW,OAAO,GAAG,OAAO,CAAC;AAChC,IAAG,WAAW,eAAe,OAAO,WAAW,EAAE,QAAQ,OAAO,IAAI;AAAA,EACtE;AACF;AACA,IAAM,UAAU;AAAA,EACd,MAAM,CAAC;AAAA,IACL;AAAA,EACF,MAAM,CAAC,mCAAmC;AAAA,IACxC,qCAAqC,SAAS;AAAA,EAChD,CAAC;AAAA,EACD,OAAO;AAAA,EACP,MAAM,CAAC;AAAA,IACL;AAAA,EACF,MAAM,CAAC,4BAA4B;AAAA,IACjC,4BAA4B;AAAA,IAC5B,uCAAuC,SAAS,MAAM,iBAAiB,SAAS,KAAK,eAAe;AAAA,IACpG,qCAAqC,SAAS,WAAW;AAAA,EAC3D,CAAC;AAAA,EACD,kBAAkB;AAAA,EAClB,sBAAsB;AAAA,EACtB,YAAY;AAAA,EACZ,eAAe;AAAA,EACf,eAAe,CAAC;AAAA,IACd;AAAA,EACF,MAAM,CAAC,sCAAsC;AAAA,IAC3C,qCAAqC,CAAC;AAAA,EACxC,CAAC;AAAA,EACD,gBAAgB,CAAC;AAAA,IACf;AAAA,EACF,MAAM,CAAC,uCAAuC;AAAA,IAC5C,qCAAqC,CAAC;AAAA,EACxC,CAAC;AAAA,EACD,cAAc;AAChB;AACA,IAAM,yBAAN,MAAM,gCAA+B,UAAU;AAAA,EAC7C,OAAO;AAAA,EACP,QAAQC;AAAA,EACR,UAAU;AAAA,EACV,OAAO,OAAuB,uBAAM;AAClC,QAAI;AACJ,WAAO,SAAS,+BAA+B,mBAAmB;AAChE,cAAQ,wCAAwC,sCAAyC,sBAAsB,uBAAsB,IAAI,qBAAqB,uBAAsB;AAAA,IACtL;AAAA,EACF,GAAG;AAAA,EACH,OAAO,QAA0B,mBAAmB;AAAA,IAClD,OAAO;AAAA,IACP,SAAS,wBAAuB;AAAA,EAClC,CAAC;AACH;AAAA,CACC,MAAM;AACL,GAAC,OAAO,cAAc,eAAe,cAAiB,iBAAkB,wBAAwB,CAAC;AAAA,IAC/F,MAAM;AAAA,EACR,CAAC,GAAG,MAAM,IAAI;AAChB,GAAG;AAUH,IAAI;AAAA,CACH,SAAUC,2BAA0B;AAInC,EAAAA,0BAAyB,MAAM,IAAI;AAInC,EAAAA,0BAAyB,OAAO,IAAI;AAIpC,EAAAA,0BAAyB,MAAM,IAAI;AAInC,EAAAA,0BAAyB,kBAAkB,IAAI;AAI/C,EAAAA,0BAAyB,sBAAsB,IAAI;AAInD,EAAAA,0BAAyB,YAAY,IAAI;AAIzC,EAAAA,0BAAyB,eAAe,IAAI;AAI5C,EAAAA,0BAAyB,eAAe,IAAI;AAI5C,EAAAA,0BAAyB,gBAAgB,IAAI;AAI7C,EAAAA,0BAAyB,cAAc,IAAI;AAC7C,GAAG,6BAA6B,2BAA2B,CAAC,EAAE;AAC9D,IAAM,wBAAN,MAAM,+BAA8B,cAAc;AAAA,EAChD;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,kBAAkB,OAAO,sBAAsB;AAAA,EAC/C,YAAY,OAAO,IAAI;AACrB,UAAM;AACN,SAAK,KAAK;AACV,SAAK,QAAQ;AACb,SAAK,eAAe,KAAK,MAAM,iBAAiB,UAAU,MAAM;AAC9D,WAAK,GAAG,aAAa;AAAA,IACvB,CAAC;AAAA,EACH;AAAA,EACA,IAAI,OAAO;AACT,QAAI,KAAK,MAAM;AACb,aAAO,KAAK,KAAK,QAAQ,QAAQ,QAAQ,EAAE,KAAK,KAAK,YAAY,KAAK,KAAK,SAAS;AAAA,IACtF;AAAA,EACF;AAAA,EACA,IAAI,UAAU;AACZ,QAAI,KAAK,MAAM;AACb,aAAO,KAAK,KAAK,YAAY,KAAK,KAAK,SAAS,SAAS,KAAK,KAAK,SAAS,SAAS,IAAI;AAAA,IAC3F;AAAA,EACF;AAAA,EACA,cAAc,MAAM;AAClB,WAAO;AAAA,MACL,YAAY,CAAC,KAAK,QAAQ,KAAK,WAAW,YAAY;AAAA,IACxD;AAAA,EACF;AAAA,EACA,YAAY,OAAO,MAAM;AACvB,SAAK,MAAM,YAAY,OAAO,IAAI;AAAA,EACpC;AAAA,EACA,WAAW,OAAO,MAAM;AACtB,SAAK,WAAW,CAAC,KAAK;AACtB,QAAI,KAAK,SAAU,MAAK,MAAM,aAAa,KAAK;AAAA,MAC9C,eAAe;AAAA,MACf,MAAM,KAAK;AAAA,IACb,CAAC;AAAA,QAAO,MAAK,MAAM,eAAe,KAAK;AAAA,MACrC,eAAe;AAAA,MACf,MAAM,KAAK;AAAA,IACb,CAAC;AACD,UAAM,eAAe;AAAA,EACvB;AAAA,EACA,aAAa;AACX,WAAO,KAAK,MAAM,WAAW,KAAK,IAAI;AAAA,EACxC;AAAA,EACA,cAAc;AACZ,UAAM,YAAY;AAClB,SAAK,aAAa,YAAY;AAAA,EAChC;AAAA,EACA,OAAO,OAAO,SAAS,8BAA8B,mBAAmB;AACtE,WAAO,KAAK,qBAAqB,wBAA0B,kBAAkB,WAAW,MAAM,iBAAiB,CAAC,GAAM,kBAAqB,iBAAiB,CAAC;AAAA,EAC/J;AAAA,EACA,OAAO,OAAyB,kBAAkB;AAAA,IAChD,MAAM;AAAA,IACN,WAAW,CAAC,CAAC,IAAI,0BAA0B,EAAE,CAAC;AAAA,IAC9C,QAAQ;AAAA,MACN,MAAM;AAAA,MACN,MAAM,CAAC,GAAG,QAAQ,QAAQ,gBAAgB;AAAA,MAC1C,OAAO,CAAC,GAAG,SAAS,SAAS,gBAAgB;AAAA,MAC7C,MAAM,CAAC,GAAG,QAAQ,QAAQ,gBAAgB;AAAA,MAC1C,aAAa,CAAC,GAAG,eAAe,eAAe,gBAAgB;AAAA,IACjE;AAAA,IACA,UAAU,CAAI,mBAAmB,CAAC,sBAAsB,CAAC,GAAM,0BAA0B;AAAA,IACzF,OAAO;AAAA,IACP,OAAO;AAAA,IACP,MAAM;AAAA,IACN,QAAQ,CAAC,CAAC,GAAG,MAAM,GAAG,CAAC,GAAG,OAAO,GAAG,CAAC,GAAG,SAAS,GAAG,CAAC,WAAW,KAAK,GAAG,SAAS,SAAS,GAAG,CAAC,GAAG,oBAAoB,yBAAyB,GAAG,CAAC,YAAY,KAAK,GAAG,SAAS,SAAS,iBAAiB,iBAAiB,GAAG,MAAM,GAAG,CAAC,YAAY,KAAK,GAAG,SAAS,iBAAiB,eAAe,GAAG,CAAC,GAAG,SAAS,GAAG,MAAM,GAAG,CAAC,eAAe,gBAAgB,GAAG,SAAS,GAAG,MAAM,GAAG,CAAC,eAAe,cAAc,GAAG,SAAS,GAAG,MAAM,GAAG,CAAC,eAAe,cAAc,GAAG,CAAC,eAAe,YAAY,GAAG,CAAC,SAAS,IAAI,GAAG,SAAS,GAAG,CAAC,WAAW,GAAG,GAAG,CAAC,0BAA0B,IAAI,GAAG,QAAQ,aAAa,CAAC;AAAA,IACrlB,UAAU,SAAS,+BAA+B,IAAI,KAAK;AACzD,UAAI,KAAK,GAAG;AACV,QAAG,WAAW,GAAG,wCAAwC,IAAI,IAAI,SAAS,CAAC;AAAA,MAC7E;AACA,UAAI,KAAK,GAAG;AACV,QAAG,WAAW,QAAQ,IAAI,IAAI;AAAA,MAChC;AAAA,IACF;AAAA,IACA,cAAc,CAAC,wBAAuB,cAAiB,SAAY,MAAS,kBAAqB,SAAS,iBAAiB,eAAe,YAAY;AAAA,IACtJ,eAAe;AAAA,IACf,MAAM;AAAA,MACJ,WAAW,CAAC,QAAQ,cAAc,CAAC,MAAM,MAAM,MAAQ;AAAA,QACrD,SAAS;AAAA,MACX,CAAC,CAAC,GAAG,WAAW,aAAa,CAAC,MAAQ;AAAA,QACpC,SAAS;AAAA,MACX,CAAC,GAAG,QAAQ,GAAG,CAAC,CAAC,GAAG,WAAW,aAAa,CAAC,QAAQ,KAAK,MAAQ;AAAA,QAChE,SAAS;AAAA,MACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAAA,IACT;AAAA,EACF,CAAC;AACH;AAAA,CACC,MAAM;AACL,GAAC,OAAO,cAAc,eAAe,cAAiB,iBAAkB,uBAAuB,CAAC;AAAA,IAC9F,MAAM;AAAA,IACN,MAAM,CAAC;AAAA,MACL,UAAU;AAAA,MACV,YAAY;AAAA,MACZ,SAAS,CAAC,cAAc,iBAAiB,eAAe,YAAY;AAAA,MACpE,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAwDV,YAAY,CAAC,QAAQ,cAAc,CAAC,MAAM,MAAM,MAAQ;AAAA,QACtD,SAAS;AAAA,MACX,CAAC,CAAC,GAAG,WAAW,aAAa,CAAC,MAAQ;AAAA,QACpC,SAAS;AAAA,MACX,CAAC,GAAG,QAAQ,GAAG,CAAC,CAAC,GAAG,WAAW,aAAa,CAAC,QAAQ,KAAK,MAAQ;AAAA,QAChE,SAAS;AAAA,MACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAAA,MACP,eAAe,kBAAkB;AAAA,MACjC,iBAAiB,wBAAwB;AAAA,MACzC,WAAW,CAAC,sBAAsB;AAAA,IACpC,CAAC;AAAA,EACH,CAAC,GAAG,MAAM,CAAC;AAAA,IACT,MAAM;AAAA,IACN,YAAY,CAAC;AAAA,MACX,MAAM;AAAA,MACN,MAAM,CAAC,WAAW,MAAM,iBAAiB,CAAC;AAAA,IAC5C,CAAC;AAAA,EACH,GAAG;AAAA,IACD,MAAS;AAAA,EACX,CAAC,GAAG;AAAA,IACF,MAAM,CAAC;AAAA,MACL,MAAM;AAAA,IACR,CAAC;AAAA,IACD,MAAM,CAAC;AAAA,MACL,MAAM;AAAA,MACN,MAAM,CAAC;AAAA,QACL,WAAW;AAAA,MACb,CAAC;AAAA,IACH,CAAC;AAAA,IACD,OAAO,CAAC;AAAA,MACN,MAAM;AAAA,MACN,MAAM,CAAC;AAAA,QACL,WAAW;AAAA,MACb,CAAC;AAAA,IACH,CAAC;AAAA,IACD,MAAM,CAAC;AAAA,MACL,MAAM;AAAA,MACN,MAAM,CAAC;AAAA,QACL,WAAW;AAAA,MACb,CAAC;AAAA,IACH,CAAC;AAAA,IACD,aAAa,CAAC;AAAA,MACZ,MAAM;AAAA,MACN,MAAM,CAAC;AAAA,QACL,WAAW;AAAA,MACb,CAAC;AAAA,IACH,CAAC;AAAA,EACH,CAAC;AACH,GAAG;AAKH,IAAM,oBAAN,MAAM,2BAA0B,cAAc;AAAA,EAC5C;AAAA,EACA;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,gBAAgB;AAAA;AAAA;AAAA;AAAA;AAAA,EAKhB,IAAI,YAAY;AACd,WAAO,KAAK;AAAA,EACd;AAAA,EACA,IAAI,UAAU,KAAK;AACjB,SAAK,aAAa;AAClB,QAAI,KAAK,YAAa,MAAK,gBAAgB,KAAK,IAAI;AAAA,EACtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,kBAAkB,IAAI,aAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMnC,eAAe,IAAI,aAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMhC,iBAAiB,IAAI,aAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMlC,eAAe,IAAI,aAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMhC,iBAAiB,IAAI,aAAa;AAAA,EAClC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,kBAAkB,IAAI,QAAQ;AAAA,EAC9B;AAAA,EACA;AAAA,EACA,mBAAmB,KAAK,gBAAgB,aAAa;AAAA,EACrD,kBAAkB,OAAO,sBAAsB;AAAA,EAC/C,YAAY,IAAI,IAAI;AAClB,UAAM;AACN,SAAK,KAAK;AACV,SAAK,KAAK;AAAA,EACZ;AAAA,EACA,IAAI,OAAO;AACT,WAAO,KAAK,SAAS,KAAK,MAAM,SAAS,KAAK,MAAM,CAAC,IAAI;AAAA,EAC3D;AAAA,EACA,qBAAqB;AACnB,QAAI,KAAK,UAAU,QAAQ;AACzB,WAAK,cAAc,CAAC;AAAA,IACtB;AACA,SAAK,UAAU,QAAQ,UAAQ;AAC7B,UAAI,KAAK,QAAQ,MAAM,eAAe;AACpC,aAAK,uBAAuB,KAAK;AAAA,MACnC,OAAO;AACL,aAAK,YAAY,KAAK,QAAQ,CAAC,IAAI,KAAK;AAAA,MAC1C;AAAA,IACF,CAAC;AACD,SAAK,cAAc;AAAA,EACrB;AAAA,EACA,mBAAmB,MAAM;AACvB,QAAI,KAAK,YAAa,QAAO,KAAK,OAAO,KAAK,YAAY,KAAK,IAAI,IAAI,KAAK,YAAY,SAAS;AAAA,QAAO,QAAO;AAAA,EACjH;AAAA,EACA,YAAY,OAAO,MAAM;AACvB,QAAI,cAAc,MAAM;AACxB,QAAI,YAAY,cAAc,EAAS,aAAa,wCAAwC,KAAK,EAAS,aAAa,6CAA6C,IAAI;AACtK;AAAA,IACF,WAAW,KAAK,eAAe;AAC7B,UAAI,KAAK,eAAe,OAAO;AAC7B;AAAA,MACF;AACA,UAAI,QAAQ,KAAK,qBAAqB,IAAI;AAC1C,UAAI,WAAW,SAAS;AACxB,UAAI,KAAK,kBAAkB,UAAU;AACnC,YAAI,UAAU;AACZ,eAAK,YAAY;AACjB,eAAK,eAAe,KAAK;AAAA,YACvB,eAAe;AAAA,YACf;AAAA,UACF,CAAC;AAAA,QACH,OAAO;AACL,eAAK,YAAY;AACjB,eAAK,aAAa,KAAK;AAAA,YACrB,eAAe;AAAA,YACf;AAAA,UACF,CAAC;AAAA,QACH;AAAA,MACF,WAAW,KAAK,kBAAkB,YAAY;AAC5C,YAAI,UAAU;AACZ,eAAK,YAAY,KAAK,UAAU,OAAO,CAAC,KAAK,MAAM,KAAK,KAAK;AAC7D,eAAK,eAAe,KAAK;AAAA,YACvB,eAAe;AAAA,YACf;AAAA,UACF,CAAC;AAAA,QACH,OAAO;AACL,eAAK,YAAY,CAAC,GAAI,KAAK,aAAa,CAAC,GAAI,IAAI;AACjD,eAAK,aAAa,KAAK;AAAA,YACrB,eAAe;AAAA,YACf;AAAA,UACF,CAAC;AAAA,QACH;AAAA,MACF;AACA,WAAK,gBAAgB,KAAK,KAAK,SAAS;AACxC,WAAK,gBAAgB,KAAK,IAAI;AAAA,IAChC;AAAA,EACF;AAAA,EACA,qBAAqB,MAAM;AACzB,QAAI,QAAQ;AACZ,QAAI,KAAK,iBAAiB,KAAK,WAAW;AACxC,UAAI,KAAK,kBAAkB,UAAU;AACnC,gBAAQ,KAAK,aAAa,OAAO,IAAI;AAAA,MACvC,WAAW,KAAK,kBAAkB,YAAY;AAC5C,iBAAS,IAAI,GAAG,IAAI,KAAK,UAAU,QAAQ,KAAK;AAC9C,cAAI,KAAK,UAAU,CAAC,KAAK,MAAM;AAC7B,oBAAQ;AACR;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAAA,IACF;AACA,WAAO;AAAA,EACT;AAAA,EACA,WAAW,MAAM;AACf,WAAO,KAAK,qBAAqB,IAAI,KAAK;AAAA,EAC5C;AAAA,EACA,OAAO,OAAO,SAAS,0BAA0B,mBAAmB;AAClE,WAAO,KAAK,qBAAqB,oBAAsB,kBAAqB,UAAU,GAAM,kBAAqB,iBAAiB,CAAC;AAAA,EACrI;AAAA,EACA,OAAO,OAAyB,kBAAkB;AAAA,IAChD,MAAM;AAAA,IACN,WAAW,CAAC,CAAC,qBAAqB,GAAG,CAAC,sBAAsB,GAAG,CAAC,qBAAqB,CAAC;AAAA,IACtF,gBAAgB,SAAS,iCAAiC,IAAI,KAAK,UAAU;AAC3E,UAAI,KAAK,GAAG;AACV,QAAG,eAAe,UAAU,KAAK,CAAC;AAClC,QAAG,eAAe,UAAU,eAAe,CAAC;AAAA,MAC9C;AACA,UAAI,KAAK,GAAG;AACV,YAAI;AACJ,QAAG,eAAe,KAAQ,YAAY,CAAC,MAAM,IAAI,sBAAsB,GAAG;AAC1E,QAAG,eAAe,KAAQ,YAAY,CAAC,MAAM,IAAI,YAAY;AAAA,MAC/D;AAAA,IACF;AAAA,IACA,UAAU;AAAA,IACV,cAAc,SAAS,+BAA+B,IAAI,KAAK;AAC7D,UAAI,KAAK,GAAG;AACV,QAAG,YAAY,mBAAmB,MAAM;AACxC,QAAG,WAAW,IAAI,GAAG,IAAI,GAAG,MAAM,GAAG,IAAI,UAAU,CAAC;AAAA,MACtD;AAAA,IACF;AAAA,IACA,QAAQ;AAAA,MACN,OAAO;AAAA,MACP,YAAY;AAAA,MACZ,eAAe;AAAA,MACf,aAAa,CAAC,GAAG,eAAe,eAAe,gBAAgB;AAAA,MAC/D,eAAe,CAAC,GAAG,iBAAiB,iBAAiB,gBAAgB;AAAA,MACrE,WAAW;AAAA,IACb;AAAA,IACA,SAAS;AAAA,MACP,iBAAiB;AAAA,MACjB,cAAc;AAAA,MACd,gBAAgB;AAAA,MAChB,cAAc;AAAA,MACd,gBAAgB;AAAA,IAClB;AAAA,IACA,UAAU,CAAI,mBAAmB,CAAC,sBAAsB,CAAC,GAAM,0BAA0B;AAAA,IACzF,OAAO;AAAA,IACP,MAAM;AAAA,IACN,QAAQ,CAAC,CAAC,0BAA0B,IAAI,GAAG,SAAS,eAAe,QAAQ,GAAG,MAAM,GAAG,CAAC,0BAA0B,IAAI,GAAG,eAAe,MAAM,CAAC;AAAA,IAC/I,UAAU,SAAS,2BAA2B,IAAI,KAAK;AACrD,UAAI,KAAK,GAAG;AACV,QAAG,WAAW,GAAG,oCAAoC,GAAG,GAAG,SAAS,CAAC;AAAA,MACvE;AACA,UAAI,KAAK,GAAG;AACV,QAAG,WAAW,QAAQ,IAAI,IAAI;AAAA,MAChC;AAAA,IACF;AAAA,IACA,cAAc,CAAC,cAAiB,MAAM,uBAAuB,YAAY;AAAA,IACzE,eAAe;AAAA,EACjB,CAAC;AACH;AAAA,CACC,MAAM;AACL,GAAC,OAAO,cAAc,eAAe,cAAiB,iBAAkB,mBAAmB,CAAC;AAAA,IAC1F,MAAM;AAAA,IACN,MAAM,CAAC;AAAA,MACL,UAAU;AAAA,MACV,YAAY;AAAA,MACZ,SAAS,CAAC,cAAc,uBAAuB,YAAY;AAAA,MAC3D,UAAU;AAAA,MACV,iBAAiB,wBAAwB;AAAA,MACzC,WAAW,CAAC,sBAAsB;AAAA,MAClC,MAAM;AAAA,QACJ,0BAA0B;AAAA,QAC1B,WAAW;AAAA,MACb;AAAA,IACF,CAAC;AAAA,EACH,CAAC,GAAG,MAAM,CAAC;AAAA,IACT,MAAS;AAAA,EACX,GAAG;AAAA,IACD,MAAS;AAAA,EACX,CAAC,GAAG;AAAA,IACF,OAAO,CAAC;AAAA,MACN,MAAM;AAAA,IACR,CAAC;AAAA,IACD,YAAY,CAAC;AAAA,MACX,MAAM;AAAA,IACR,CAAC;AAAA,IACD,eAAe,CAAC;AAAA,MACd,MAAM;AAAA,IACR,CAAC;AAAA,IACD,aAAa,CAAC;AAAA,MACZ,MAAM;AAAA,MACN,MAAM,CAAC;AAAA,QACL,WAAW;AAAA,MACb,CAAC;AAAA,IACH,CAAC;AAAA,IACD,eAAe,CAAC;AAAA,MACd,MAAM;AAAA,MACN,MAAM,CAAC;AAAA,QACL,WAAW;AAAA,MACb,CAAC;AAAA,IACH,CAAC;AAAA,IACD,WAAW,CAAC;AAAA,MACV,MAAM;AAAA,IACR,CAAC;AAAA,IACD,iBAAiB,CAAC;AAAA,MAChB,MAAM;AAAA,IACR,CAAC;AAAA,IACD,cAAc,CAAC;AAAA,MACb,MAAM;AAAA,IACR,CAAC;AAAA,IACD,gBAAgB,CAAC;AAAA,MACf,MAAM;AAAA,IACR,CAAC;AAAA,IACD,cAAc,CAAC;AAAA,MACb,MAAM;AAAA,IACR,CAAC;AAAA,IACD,gBAAgB,CAAC;AAAA,MACf,MAAM;AAAA,IACR,CAAC;AAAA,IACD,WAAW,CAAC;AAAA,MACV,MAAM;AAAA,MACN,MAAM,CAAC,aAAa;AAAA,IACtB,CAAC;AAAA,IACD,qBAAqB,CAAC;AAAA,MACpB,MAAM;AAAA,MACN,MAAM,CAAC,eAAe;AAAA,QACpB,aAAa;AAAA,MACf,CAAC;AAAA,IACH,CAAC;AAAA,EACH,CAAC;AACH,GAAG;AACH,IAAM,0BAAN,MAAM,yBAAwB;AAAA,EAC5B,OAAO,OAAO,SAAS,gCAAgC,mBAAmB;AACxE,WAAO,KAAK,qBAAqB,0BAAyB;AAAA,EAC5D;AAAA,EACA,OAAO,OAAyB,iBAAiB;AAAA,IAC/C,MAAM;AAAA,IACN,SAAS,CAAC,mBAAmB,uBAAuB,YAAY;AAAA,IAChE,SAAS,CAAC,mBAAmB,uBAAuB,YAAY;AAAA,EAClE,CAAC;AAAA,EACD,OAAO,OAAyB,iBAAiB;AAAA,IAC/C,SAAS,CAAC,mBAAmB,uBAAuB,cAAc,YAAY;AAAA,EAChF,CAAC;AACH;AAAA,CACC,MAAM;AACL,GAAC,OAAO,cAAc,eAAe,cAAiB,iBAAkB,yBAAyB,CAAC;AAAA,IAChG,MAAM;AAAA,IACN,MAAM,CAAC;AAAA,MACL,SAAS,CAAC,mBAAmB,uBAAuB,YAAY;AAAA,MAChE,SAAS,CAAC,mBAAmB,uBAAuB,YAAY;AAAA,IAClE,CAAC;AAAA,EACH,CAAC,GAAG,MAAM,IAAI;AAChB,GAAG;",
  "names": ["animation", "style", "OrganizationChartClasses"]
}
